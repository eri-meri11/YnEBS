{"ast":null,"code":"import { NFTStorage, File } from \"nft.storage\";\nconst NFT_STORAGE_API_KEY = \"f4297010.82952ec8111a4894bae46a20ebb79a21\"; // NFT.Storage API Key\n\nexport const uploadToIPFS = async data => {\n  try {\n    const client = new NFTStorage({\n      token: NFT_STORAGE_API_KEY\n    });\n    const blob = new Blob([JSON.stringify(data)], {\n      type: \"application/json\"\n    });\n    const file = new File([blob], \"data.json\");\n    const cid = await client.storeBlob(file); // IPFS CID al\n    return `https://ipfs.io/ipfs/${cid}`; // IPFS URL'si oluştur\n  } catch (error) {\n    console.error(\"NFT.Storage yükleme hatası:\", error);\n    return null;\n  }\n};","map":{"version":3,"names":["NFTStorage","File","NFT_STORAGE_API_KEY","uploadToIPFS","data","client","token","blob","Blob","JSON","stringify","type","file","cid","storeBlob","error","console"],"sources":["/home/ege/web/src/storage.js"],"sourcesContent":["import { NFTStorage, File } from \"nft.storage\";\n\nconst NFT_STORAGE_API_KEY = \"f4297010.82952ec8111a4894bae46a20ebb79a21\"; // NFT.Storage API Key\n\nexport const uploadToIPFS = async (data) => {\n  try {\n    const client = new NFTStorage({ token: NFT_STORAGE_API_KEY });\n    const blob = new Blob([JSON.stringify(data)], { type: \"application/json\" });\n    const file = new File([blob], \"data.json\");\n\n    const cid = await client.storeBlob(file); // IPFS CID al\n    return `https://ipfs.io/ipfs/${cid}`; // IPFS URL'si oluştur\n  } catch (error) {\n    console.error(\"NFT.Storage yükleme hatası:\", error);\n    return null;\n  }\n};\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,IAAI,QAAQ,aAAa;AAE9C,MAAMC,mBAAmB,GAAG,2CAA2C,CAAC,CAAC;;AAEzE,OAAO,MAAMC,YAAY,GAAG,MAAOC,IAAI,IAAK;EAC1C,IAAI;IACF,MAAMC,MAAM,GAAG,IAAIL,UAAU,CAAC;MAAEM,KAAK,EAAEJ;IAAoB,CAAC,CAAC;IAC7D,MAAMK,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC,EAAE;MAAEO,IAAI,EAAE;IAAmB,CAAC,CAAC;IAC3E,MAAMC,IAAI,GAAG,IAAIX,IAAI,CAAC,CAACM,IAAI,CAAC,EAAE,WAAW,CAAC;IAE1C,MAAMM,GAAG,GAAG,MAAMR,MAAM,CAACS,SAAS,CAACF,IAAI,CAAC,CAAC,CAAC;IAC1C,OAAO,wBAAwBC,GAAG,EAAE,CAAC,CAAC;EACxC,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}