{"ast":null,"code":"var _jsxFileName = \"/home/ege/web/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { loginWithGoogle, logout, checkAuthState } from \"./auth\";\nimport { db } from \"./firebase\";\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\nimport { uploadToIPFS, fetchFromIPFS } from \"./storage\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [role, setRole] = useState(null);\n  const [tcKimlik, setTcKimlik] = useState(\"\");\n  const [notlar, setNotlar] = useState(\"\");\n  const [ogrenciNot, setOgrenciNot] = useState(\"\");\n  const [hash, setHash] = useState(\"\");\n  useEffect(() => {\n    checkAuthState(async loggedUser => {\n      if (loggedUser) {\n        setUser(loggedUser);\n        await getUserRole(loggedUser.uid);\n      } else {\n        setUser(null);\n        setRole(null);\n      }\n    });\n  }, []);\n\n  // Kullanıcının rolünü ve TC kimlik numarasını Firestore'dan al\n  const getUserRole = async uid => {\n    const userRef = doc(db, \"students\", uid);\n    const userSnap = await getDoc(userRef);\n    if (userSnap.exists()) {\n      const userData = userSnap.data();\n      setRole(userData.role);\n      setTcKimlik(userData.tcKimlik || \"\");\n    } else {\n      setRole(\"student\"); // Varsayılan olarak öğrenci\n      setTcKimlik(\"\");\n      await setDoc(userRef, {\n        role: \"student\",\n        tcKimlik: \"\"\n      });\n    }\n  };\n\n  // Öğretmen not eklediğinde veriyi IPFS'e yükleyip Firestore'a hash kaydeder\n  const handleAddGrade = async () => {\n    if (!user) return alert(\"Önce giriş yapın!\");\n    if (role !== \"teacher\") return alert(\"Sadece öğretmenler not ekleyebilir!\");\n    const data = {\n      tcKimlik,\n      notlar: notlar.split(\",\")\n    };\n    const ipfsHash = await uploadToIPFS(data);\n    if (ipfsHash) {\n      setHash(ipfsHash);\n      console.log(\"IPFS Hash Kaydedildi:\", ipfsHash);\n\n      // Firestore'a TC Kimlik ile hash kaydet\n      const gradeRef = doc(db, \"grades\", tcKimlik);\n      await setDoc(gradeRef, {\n        ipfsHash\n      });\n      alert(`Veriler başarıyla IPFS'e yüklendi! Hash: ${ipfsHash}`);\n    } else {\n      alert(\"Yükleme başarısız oldu!\");\n    }\n  };\n\n  // Öğrenci giriş yaptığında kendi TC kimlik numarasıyla notlarını çeker\n  const handleCheckGrade = async () => {\n    if (!user) {\n      alert(\"Önce giriş yapın!\");\n      return;\n    }\n    try {\n      // Firestore'dan UID ile TC Kimlik No'yu al\n      const studentRef = doc(db, \"students\", user.uid);\n      const studentSnap = await getDoc(studentRef);\n      if (!studentSnap.exists()) {\n        alert(\"Öğrenci bilgileri bulunamadı!\");\n        return;\n      }\n      const studentData = studentSnap.data();\n      const tcKimlik = studentData.tcKimlik;\n\n      // Firestore'dan TC Kimlik ile Hash'i çek\n      const gradeRef = doc(db, \"grades\", tcKimlik);\n      const gradeSnap = await getDoc(gradeRef);\n      if (!gradeSnap.exists()) {\n        alert(\"Bu TC Kimlik No'ya ait veri bulunamadı!\");\n        return;\n      }\n      const hash = gradeSnap.data().ipfsHash;\n      setHash(hash);\n\n      // IPFS'ten veriyi çek\n      const data = await fetchFromIPFS(hash);\n      if (data) {\n        setOgrenciNot(data.notlar.join(\", \"));\n      } else {\n        alert(\"Veri alınamadı!\");\n      }\n    } catch (error) {\n      console.error(\"Notları alma hatası:\", error);\n      alert(\"Bir hata oluştu, lütfen tekrar deneyin.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Ho\\u015F geldin, \", user.displayName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"\\xC7\\u0131k\\u0131\\u015F Yap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), role === \"teacher\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Not Ekle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\xD6\\u011Frenci TC Kimlik No\",\n          value: tcKimlik,\n          onChange: e => setTcKimlik(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Notlar\\u0131 virg\\xFClle ay\\u0131rarak gir (\\xF6rn: 90,85,78)\",\n          value: notlar,\n          onChange: e => setNotlar(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddGrade,\n          children: \"Notu Kaydet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), role === \"student\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Notlar\\u0131 G\\xF6r\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCheckGrade,\n          children: \"Notlar\\u0131 G\\xF6ster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this), ogrenciNot && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Notlar: \", ogrenciNot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loginWithGoogle,\n      children: \"Google ile Giri\\u015F Yap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"cFXb4iF1tzgvgEhuAgVxksma6PQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","loginWithGoogle","logout","checkAuthState","db","doc","getDoc","setDoc","uploadToIPFS","fetchFromIPFS","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","user","setUser","role","setRole","tcKimlik","setTcKimlik","notlar","setNotlar","ogrenciNot","setOgrenciNot","hash","setHash","loggedUser","getUserRole","uid","userRef","userSnap","exists","userData","data","handleAddGrade","alert","split","ipfsHash","console","log","gradeRef","handleCheckGrade","studentRef","studentSnap","studentData","gradeSnap","join","error","children","displayName","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/ege/web/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { loginWithGoogle, logout, checkAuthState } from \"./auth\";\nimport { db } from \"./firebase\";\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\nimport { uploadToIPFS, fetchFromIPFS } from \"./storage\";\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n  const [role, setRole] = useState(null);\n  const [tcKimlik, setTcKimlik] = useState(\"\");\n  const [notlar, setNotlar] = useState(\"\");\n  const [ogrenciNot, setOgrenciNot] = useState(\"\");\n  const [hash, setHash] = useState(\"\");\n\n  useEffect(() => {\n    checkAuthState(async (loggedUser) => {\n      if (loggedUser) {\n        setUser(loggedUser);\n        await getUserRole(loggedUser.uid);\n      } else {\n        setUser(null);\n        setRole(null);\n      }\n    });\n  }, []);\n\n  // Kullanıcının rolünü ve TC kimlik numarasını Firestore'dan al\n  const getUserRole = async (uid) => {\n    const userRef = doc(db, \"students\", uid);\n    const userSnap = await getDoc(userRef);\n\n    if (userSnap.exists()) {\n      const userData = userSnap.data();\n      setRole(userData.role);\n      setTcKimlik(userData.tcKimlik || \"\");\n    } else {\n      setRole(\"student\"); // Varsayılan olarak öğrenci\n      setTcKimlik(\"\");\n      await setDoc(userRef, { role: \"student\", tcKimlik: \"\" });\n    }\n  };\n\n  // Öğretmen not eklediğinde veriyi IPFS'e yükleyip Firestore'a hash kaydeder\n  const handleAddGrade = async () => {\n    if (!user) return alert(\"Önce giriş yapın!\");\n    if (role !== \"teacher\") return alert(\"Sadece öğretmenler not ekleyebilir!\");\n\n    const data = { tcKimlik, notlar: notlar.split(\",\") };\n    const ipfsHash = await uploadToIPFS(data);\n\n    if (ipfsHash) {\n      setHash(ipfsHash);\n      console.log(\"IPFS Hash Kaydedildi:\", ipfsHash);\n\n      // Firestore'a TC Kimlik ile hash kaydet\n      const gradeRef = doc(db, \"grades\", tcKimlik);\n      await setDoc(gradeRef, { ipfsHash });\n\n      alert(`Veriler başarıyla IPFS'e yüklendi! Hash: ${ipfsHash}`);\n    } else {\n      alert(\"Yükleme başarısız oldu!\");\n    }\n  };\n\n  // Öğrenci giriş yaptığında kendi TC kimlik numarasıyla notlarını çeker\n  const handleCheckGrade = async () => {\n    if (!user) {\n      alert(\"Önce giriş yapın!\");\n      return;\n    }\n\n    try {\n      // Firestore'dan UID ile TC Kimlik No'yu al\n      const studentRef = doc(db, \"students\", user.uid);\n      const studentSnap = await getDoc(studentRef);\n\n      if (!studentSnap.exists()) {\n        alert(\"Öğrenci bilgileri bulunamadı!\");\n        return;\n      }\n\n      const studentData = studentSnap.data();\n      const tcKimlik = studentData.tcKimlik;\n\n      // Firestore'dan TC Kimlik ile Hash'i çek\n      const gradeRef = doc(db, \"grades\", tcKimlik);\n      const gradeSnap = await getDoc(gradeRef);\n\n      if (!gradeSnap.exists()) {\n        alert(\"Bu TC Kimlik No'ya ait veri bulunamadı!\");\n        return;\n      }\n\n      const hash = gradeSnap.data().ipfsHash;\n      setHash(hash);\n\n      // IPFS'ten veriyi çek\n      const data = await fetchFromIPFS(hash);\n      if (data) {\n        setOgrenciNot(data.notlar.join(\", \"));\n      } else {\n        alert(\"Veri alınamadı!\");\n      }\n    } catch (error) {\n      console.error(\"Notları alma hatası:\", error);\n      alert(\"Bir hata oluştu, lütfen tekrar deneyin.\");\n    }\n  };\n\n  return (\n    <div>\n      {user ? (\n        <>\n          <h2>Hoş geldin, {user.displayName}</h2>\n          <button onClick={logout}>Çıkış Yap</button>\n\n          {role === \"teacher\" && (\n            <div>\n              <h3>Not Ekle</h3>\n              <input\n                type=\"text\"\n                placeholder=\"Öğrenci TC Kimlik No\"\n                value={tcKimlik}\n                onChange={(e) => setTcKimlik(e.target.value)}\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Notları virgülle ayırarak gir (örn: 90,85,78)\"\n                value={notlar}\n                onChange={(e) => setNotlar(e.target.value)}\n              />\n              <button onClick={handleAddGrade}>Notu Kaydet</button>\n            </div>\n          )}\n\n          {role === \"student\" && (\n            <div>\n              <h3>Notları Gör</h3>\n              <button onClick={handleCheckGrade}>Notları Göster</button>\n              {ogrenciNot && <p>Notlar: {ogrenciNot}</p>}\n            </div>\n          )}\n        </>\n      ) : (\n        <button onClick={loginWithGoogle}>Google ile Giriş Yap</button>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}